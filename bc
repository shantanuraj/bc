#! /usr/bin/python3

'''Program to perform various conversions, among the various,
   base systems; binary, octal, decimal and hexadecimal,
   uses only two direct functions x->10 and 10->x.
'''

#Mostly working.

import sys

def error_code (code):

    error_message = {
                        1: 'No number specified!',
                        2: 'No operation specified!',
                        3: 'Invalid input base, specified!',
                        4: 'Invalid output base, specified!',
                        5: 'Invalid number specified for given base!'
    }

    help = 'Usage: bc <number> <current-base><desired-base>, Example: bc 100 do'

    print (error_message [code])
    print (help)

    sys.exit (code)


def get_input ():

    number, operation, = '',''

    try:
        number = sys.argv[1]
    except IndexError:
        error_code (1)
    try:
        operation = sys.argv[2]
    except IndexError:
        error_code (2)

    return number, operation


def check_input (number, base):

    if (base == 'b' or base == 'o' or base == 'd'):
        try:
            number = int (number)
        except ValueError:
            error_code (5)

    check = range_check (number, base)
    if (check == False):
        error_code (5)

    return True

def range_check (number, base):

    range = {
                'b':'01',
                'o':'01234567',
                'd':'0123456789',
                'h':'0123456789abcdef'
    }

    for digit in number:
        if digit not in range [base]:
            return False

    return True


def x_to_decimal (number, base):

    decimal, count = 0, 0

    number_codes = {
                    '0': 0,
                    '1': 1,
                    '2': 2,
                    '3': 3,
                    '4': 4,
                    '5': 5,
                    '6': 6,
                    '7': 7,
                    '8': 8,
                    '9': 9,
                    'a': 10,
                    'b': 11,
                    'c': 12,
                    'd': 13,
                    'e': 14,
                    'f': 15
    }


    while (number != ''):

        temp   = number_codes[number[-1]]
        number = number[:-1]
        
        decimal+= temp*(base**count)
        count+=1

    return decimal


def decimal_to_x (number, base):

    result = ''

    number_codes = {
                    0  :'0',
                    1  :'1',
                    2  :'2',
                    3  :'3',
                    4  :'4',
                    5  :'5',
                    6  :'6',
                    7  :'7',
                    8  :'8',
                    9  :'9',
                    10 :'a',
                    11 :'b',
                    12 :'c',
                    13 :'d',
                    14 :'e',
                    15 :'f'
    }

    while (number > 0):

        temp = number_codes[number%base]
        number//=base

        result = temp+result

    return result


def convert (number, operation):

    input_base   = operation[0]
    output_base  = operation[1]

    input_number  = number
    number = number.lower()

    output_number = ''

    base_codes = {
                    'b':2,
                    'o':8,
                    'd':10,
                    'h':16
    }

    if (input_base not in base_codes):
        error_code (3)
    if (output_base not in base_codes):
        error_code (4)

    check = check_input (number, input_base)

    if (input_base != 'd'):
        number = x_to_decimal (number, base_codes[input_base])

    else:
        number = int (number)

    if (output_base == 'd'):
        output_number = number

    else:
        output_number = decimal_to_x (number, base_codes[output_base])


    print ('Input:',input_number,'Output:',output_number)


def main ():

    number, operation = get_input()
    convert (number, operation)


main ()



